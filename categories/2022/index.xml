<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2022 on eBPF - the Super Power for Kernel</title><link>http://ebpf.xyz/categories/2022/</link><description>Recent content in 2022 on eBPF - the Super Power for Kernel</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 01 Apr 2022 23:12:04 +0800</lastBuildDate><atom:link href="http://ebpf.xyz/categories/2022/index.xml" rel="self" type="application/rss+xml"/><item><title>What is eBPF? | An Introduction and Practical Tips</title><link>http://ebpf.xyz/post/an_introduction_and_practical_tips/</link><pubDate>Fri, 01 Apr 2022 23:12:04 +0800</pubDate><guid>http://ebpf.xyz/post/an_introduction_and_practical_tips/</guid><description>Addr：https://ebpf.xyz/post/an_introduction_and_practical_tips
March 23, 2022
This article introduces developers to eBPF and explains how it can be used to add security, networking, and other capabilities in the Linux kernel space.
In Linux architecture, memory is separated into kernel space and user space. The kernel space is used to run the core kernel code and the device drivers. Processes running in kernel space have unrestricted access to all hardware, including CPU, memory, and disks.</description></item><item><title>Using eBPF To Enhance Kubernetes Monitoring: Powerful Insights</title><link>http://ebpf.xyz/post/ebpf_k8s_monitoring/</link><pubDate>Fri, 01 Apr 2022 23:02:58 +0800</pubDate><guid>http://ebpf.xyz/post/ebpf_k8s_monitoring/</guid><description>Addr：https://ebpf.xyz/post/ebpf_k8s_monitoring
March 23, 2022
eBPF is a piece of advanced Linux functionality that has been gradually put to use in Kubernetes over the last few years. In this guide, you will walk the reader through some use-cases for eBPF in Kubernetes, such as kernel-level network monitoring.
The Linux operating system divides its memory into two different spaces: the kernel and the userspace. The kernel space contains the core of the operating system and has access to device drivers and system hardware.</description></item><item><title>Awesome eBPF</title><link>http://ebpf.xyz/post/awesome-ebpf/</link><pubDate>Sat, 26 Mar 2022 11:17:01 +0800</pubDate><guid>http://ebpf.xyz/post/awesome-ebpf/</guid><description>Addr：https://ebpf.xyz/post/awesome-ebpf
A curated list of awesome projects related to eBPF.
BPF, as in Berkeley Packet Filter, is an in-kernel virtual machine running programs passed from user space. Initially implemented on BSD, then Linux, the (now legacy) &amp;ldquo;classic BPF&amp;rdquo; or cBPF machine would be used with tools like tcpdump for filtering packets in the kernel to avoid useless copies to user space. More recently, the BPF infrastructure in Linux has been completely reworked and gave life to the &amp;ldquo;extended BPF&amp;rdquo;, or eBPF, which gained new features (safety and termination checks, JIT-compiling for programs, persistent maps, a standard library, hardware offload support, etc.</description></item></channel></rss>