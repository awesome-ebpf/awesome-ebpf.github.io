<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on eBPF - the Super Power for Kernel</title><link>http://localhost:1313/post/</link><description>Recent content in Posts on eBPF - the Super Power for Kernel</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 25 Mar 2022 23:34:17 +0800</lastBuildDate><atom:link href="http://localhost:1313/post/index.xml" rel="self" type="application/rss+xml"/><item><title>What is eBPF?</title><link>http://localhost:1313/post/what_is_ebpf/</link><pubDate>Fri, 25 Mar 2022 23:34:17 +0800</pubDate><guid>http://localhost:1313/post/what_is_ebpf/</guid><description>Addr: https://awesome-ebpf.github.io//what_is_ebpf
1. What is eBPF? eBPF is a revolutionary technology with origins in the Linux kernel that can run sandboxed programs in an operating system kernel. It is used to safely and efficiently extend the capabilities of the kernel without requiring to change kernel source code or load kernel modules.
Historically, the operating system has always been an ideal place to implement observability, security, and networking functionality due to the kernelâ€™s privileged ability to oversee and control the entire system.</description></item></channel></rss>